// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_Task_API.DAL;

#nullable disable

namespace Test_Task_API.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231204085928_Initial_database_migration")]
    partial class Initial_database_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_Task_API.DAL.Tbl_Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("TSK_CREATED")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("TSK_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TSK_END")
                        .HasColumnType("datetime2");

                    b.Property<string>("TSK_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TSK_PRIORITY")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Tbl_Tasks");
                });

            modelBuilder.Entity("Test_Task_API.DAL.Tbl_User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("USR_ACTIVESTATUS")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("USR_CREATED")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("USR_EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("USR_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("USR_PASSWORD")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("USR_STATUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("USR_TPN")
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("USR_USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Tbl_Users");
                });

            modelBuilder.Entity("Test_Task_API.DAL.Tbl_Task", b =>
                {
                    b.HasOne("Test_Task_API.DAL.Tbl_User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Test_Task_API.DAL.Tbl_User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
